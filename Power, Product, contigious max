using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
            //int result = Algo.GetPower2(5, 4);

            //Console.WriteLine(result.ToString());

            //int[] a = {-2, -3, 4, -1, -2, 1, 5, -3};

            //int result = Algo.MaxInArray(a);
            //Console.WriteLine(result.ToString());

            int[] a = { -1, -2, -3, 0, -7, -8, -2 }; //out put max = 56, min -112
             //int arr[] = {1, -2, -3, 0, 7, -8, -2}; //output : max - 112, min - -56
            int result = Algo.GetMaxProduct(a);
            Console.WriteLine(result.ToString());
            
            Console.Read();
        }
    }

    class Algo
    {
        public static int GetPower(int number, int power)
        {
            int answer = number;
            int increment = number;

            for (int i = 1; i < power; i++)
            {
                for (int j = 1; j < number; j++)
                {
                    answer += increment;
                }
                increment = answer;
            }

            return answer;
        }

        public static int GetPower2(int number, int power)
        {
            if (power == 0)
                return 1;
            else
                return number * GetPower2(number, power - 1);
        }

        public static int MaxInArray(int[] array)
        {
            /*int current_max = array[0];
            int max = array[0];
            for (int i = 1; i < array.Length; i++)
            {
                current_max = Math.Max(array[i], current_max + array[i]);
                max = Math.Max(max, current_max);
            }
            return max;*/

            int cur_max = 0;
            int max = 0;

            for (int i = 0; i < array.Length; i++)
            {
                cur_max = cur_max + array[i];
                if (cur_max < 0)
                    cur_max = 0;
                else if (max < cur_max)
                    max = cur_max;
            }

            return max;
        
        }

        public static int GetMaxProduct(int[] array)
        {
            int curr_max = 1;
            int max = 1;
            int min_max = 1;
            int min = 1;

            for (int i = 0; i < array.Length; i++)
            {
                if (array[i] > 0) //If this element is positive
                {
                    curr_max = curr_max * array[i];
                    min_max = Math.Min(min_max * array[i], 1);
                }
                else if (array[i] == 0)
                {
                    curr_max = 1;
                    min_max = 1;
                }
                else
                {
                    int temp = curr_max;
                    curr_max = Math.Max(min_max * array[i], 1);
                    min_max = temp * array[i];
                }

                if (max < curr_max)
                    max = curr_max;
                if (min > min_max)
                    min = min_max;
            }
            return max;
        }
    }
}
